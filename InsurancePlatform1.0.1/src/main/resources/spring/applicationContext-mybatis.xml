<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- spring管理mybatis 
      1.整合sqlSessionFactory
      2.配置数据源
      3.添加mybatis自己的配置文件
        1）sqlMapConfig.xml
        2)xxxxMapper.xml(映射文件)
      4.为mapper接口生成代理对象 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:/mybatis/mybatis-configs.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:/mybatis/mappers/*.xml"></property>
        <property name="typeAliasesPackage" value="com.zlb.pojo"></property>
        </bean>
        <!-- 为mapper接口生成代理对象 -->
        <!-- 由于mapper接口众多，spring通过包扫描的方式，为全部接口生成JDK动态代理对象，
        当需要时，将代理对象储存到spring容器中，如果需要动态注入时赋值-->
        <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zlb.mapper"></property>
        </bean>
      
</beans>